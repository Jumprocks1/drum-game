<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>preview</LangVersion>
    <EnablePreviewFeatures>True</EnablePreviewFeatures>
  </PropertyGroup>
  <ItemGroup>
    <!-- <ProjectReference Include="..\DrumGame.Resources\DrumGame.Resources.csproj" /> -->
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="8.0.2" />
    <PackageReference Include="glTF2Loader" Version="1.1.3-alpha" />
    <PackageReference Include="NAudio.Asio" Version="2.1.0" />
    <PackageReference Include="ManagedBass.Midi" Version="3.1.0" />
    <!--
    ppy.osu.Framework uses a custom fork of ManagedBass (ppy.ManagedBass) which does have a corresponding
    ManagedBass.Midi package. This causes a conflict when trying to use ManagedBass.Midi in the same project as
    ppy.osu.Framework because ManagedBass.Midi requires types from the original ManagedBass package, not the
    ppy.ManagedBass package.

    To resolve this, we add an explicit reference to the ManagedBass package and alias it to "OriginalManagedBass". By
    using an alias, we can use the aliased package in the code with ManagedBass.Midi, and the osu framework can continue
    to use the ppy.ManagedBass package.
    -->
    <PackageReference Include="ManagedBass" Version="3.1.1" Aliases="OriginalManagedBass" />
    
    <!-- <PackageReference Include="NAudio" Version="2.1.0" /> -->
    <!-- <ProjectReference Include="..\..\FFMediaToolkit\FFMediaToolkit\FFMediaToolkit.csproj" /> -->
     <PackageReference Include="ppy.osu.Framework" Version="2024.523.0" />
  </ItemGroup>
</Project>
