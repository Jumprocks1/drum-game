{
  "$schema": "https://json-schema.org/draft-07/schema",
  "title": "Beatmap definition",
  "description": "A definition for a DrumGame beatmap",
  "required": [
    "offset"
  ],
  "type": "object",
  "properties": {
    "schemaVersion": {
      "enum": [
        "0.0.1"
      ]
    },
    "notes": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "channel",
          "time"
        ],
        "properties": {
          "additionalProperties": false,
          "time": {
            "type": "number"
          },
          "duration": {
            "type": "number"
          },
          "modifier": {
            "enum": [
              "accent",
              "ghost"
            ]
          },
          "sticking": {
            "enum": [
              "left",
              "right"
            ]
          },
          "preset": {
            "type": "string"
          },
          "channel": {
            "$ref": "#/$defs/channel"
          }
        }
      }
    },
    "notePresets": {
      "patternProperties": {
        ".*": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            },
            "channel": {
              "$ref": "#/$defs/channel"
            },
            "modifiers": {
              "type": "string"
            },
            "keybind": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "sample": {
              "type": "string"
            },
            "size": {
              "type": "number"
            },
            "volume": {
              "type": "number"
            },
            "pan": {
              "type": "number"
            },
            "chokeDelay": {
              "type": "number"
            }
          }
        }
      }
    },
    "bpm": {
      "type": [
        "number",
        "array"
      ],
      "items": {
        "type": "object",
        "required": [
          "time",
          "bpm"
        ],
        "properties": {
          "time": {
            "type": "number"
          },
          "bpm": {
            "type": "number"
          }
        }
      }
    },
    "measureConfig": {
      "anyOf": [
        {
          "$ref": "#/$defs/measureConfig"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/measureConfig"
          }
        }
      ]
    },
    "bookmarks": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "time"
        ],
        "properties": {
          "time": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      }
    },
    "annotations": {
      "type": [
        "array"
      ],
      "items": {
        "type": "object",
        "required": [
          "time"
        ],
        "properties": {
          "time": {
            "type": "number"
          },
          "text": {
            "type": "string"
          }
        }
      }
    },
    "audio": {
      "type": "string"
    },
    "drumOnlyAudio": {
      "type": "string"
    },
    "image": {
      "type": "string",
      "description": "Image used as a background when showing this beatmap."
    },
    "imageUrl": {
      "type": "string",
      "description": "Image url that can be used if the linked image file is missing. Image will be saved to the path in `image`. Recommended to set image to `MDF({imageUrl}).ext`."
    },
    "video": {
      "type": "string"
    },
    "shader": {
      "type": "string"
    },
    "videoOffset": {
      "type": "number"
    },
    "offset": {
      "type": "number"
    },
    "leadIn": {
      "type": "number"
    },
    "previewTime": {
      "type": "number"
    },
    "playableDuration": {
      "type": "number"
    },
    "medianBPM": {
      "type": "number"
    },
    "tickRate": {
      "type": "integer"
    },
    "id": {
      "type": "string",
      "description": "Unique identifier. Uses filename if not specified. Doesn't need to be in any particular format. By default, this will be generated by DrumGame as a GUID."
    },
    "mapSetId": {
      "type": "string",
      "description": "Causes maps with the same mapsetId to be grouped on the selection screen."
    },
    "relativeVolume": {
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "spacingMultiplier": {
      "type": "number",
      "minimum": 0,
      "enum": [
        1,
        2
      ]
    },
    "gameVersion": {
      "type": "number",
      "description": "Intended game version for this beatmap."
    },
    "title": {
      "type": "string"
    },
    "romanTitle": {
      "type": "string",
      "description": "Romanized version of title. If title is already using roman characters, this should be null."
    },
    "artist": {
      "type": "string"
    },
    "romanArtist": {
      "type": "string",
      "description": "Romanized version of artist. If artist is already using roman characters, this should be null."
    },
    "album": {
      "type": "string"
    },
    "mapper": {
      "type": "string"
    },
    "difficulty": {
      "enum": [
        "Easy",
        "Normal",
        "Insane",
        "Hard",
        "Expert",
        "Expert+"
      ]
    },
    "difficultyName": {
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "tags": {
      "type": "string"
    },
    "beatmapVersion": {
      "type": "number"
    },
    "audioHash": {
      "type": "string",
      "description": "The MD5 hash of the audio resource. Useful for restoring audio file if it is lost. Indicate other hashing algorithms with the {algorithm}:{hash} format.",
      "pattern": "^([^:]+:[a-fA-F0-9]+|[a-fA-F0-9]{32}|)$"
    },
    "spotify": {
      "type": "string",
      "pattern": "",
      "description": "Link to a Spotify resource (track, album, or artist). Can be in the following forms:\nspotify:track:TRACK_ID\nTRACK_ID\nspotify:album:ALBUM_ID\nspotify:artist:ARTIST_ID\nhttps://open.spotify.com/track/TRACK_ID"
    },
    "youTubeID": {
      "type": "string",
      "pattern": "^[0-9a-zA-Z_-]{11}$"
    },
    "youTubeOffset": {
      "type": "number"
    },
    "ototoyAlbumID": {
      "type": "number"
    },
    "amazonASIN": {
      "type": "string",
      "pattern": "^[0-9a-zA-Z]{10}$"
    },
    "bandcampArtist": {
      "type": "string"
    },
    "bandcampTrack": {
      "type": "string"
    },
    "songSource": {
      "type": "string",
      "description": "Origin of the song, such as another game, movie, anime, or event. Many songs should leave this empty."
    },
    "mapSourceUrl": {
      "type": "string",
      "description": "This should be where the map was downloaded from (or where it can be publicy shared)."
    },
    "creationTimeUtc": {
      "type": "string",
      "format": "date-time"
    },
    "links": {
      "type": "array",
      "description": "Only use for urls/sources that do not have official fields. For example, if you want to link a YouTube video, put that in the `youtubeId` field instead of here.",
      "uniqueItems": true,
      "items": [
        {
          "type": "object",
          "required": [
            "label",
            "url"
          ],
          "properties": {
            "label": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          }
        }
      ]
    }
  },
  "dependencies": {
    "imageUrl": [
      "image"
    ]
  },
  "additionalProperties": false,
  "$defs": {
    "measureConfig": {
      "type": "object",
      "required": [
        "beats"
      ],
      "properties": {
        "time": {
          "type": "number"
        },
        "beats": {
          "type": "number"
        }
      }
    },
    "channel": {
      "type": "string",
      "enum": [
        "snare",
        "bass",
        "hihat",
        "crash",
        "open-hihat",
        "half-hihat",
        "ride",
        "ride-bell",
        "sidestick",
        "high-tom",
        "mid-tom",
        "low-tom",
        "hihat-pedal",
        "splash",
        "china",
        "rim"
      ]
    }
  }
}